
// Defines protocol 10

struct AuthenticationInfo : Data {
	string token;
	uint32 ngs_version = 3;
	uint8 token_type = 1;
	uint32 server_version = 0;
}

struct RVConnectionData {
	stationurl main_station = "prudp:/";
	list<uint8> special_protocols = [];
	stationurl special_station = "prudp:/";

	nex 30500 {
		revision 1 {
			datetime server_time = 0;
		}
	}
}

struct ValidateAndRequestTicketParam {
	uint32 platform = 3;
	string username;
	anydata data;
	bool skip_version_check = false;
	uint32 nex_version;
	uint32 client_version;
}

struct ValidateAndRequestTicketResult {
	pid pid;
	buffer ticket;
	stationurl server_url;
	datetime server_time;
	string server_name;
	string source_key;
}

protocol Authentication : 10 {
	method login(string username) {
		result result;
		pid pid;
		buffer ticket;
		RVConnectionData connection_data;
		string server_name;
	}
	
	method login_ex(string username, anydata extra_data) {
		result result;
		pid pid;
		buffer ticket;
		RVConnectionData connection_data;
		string server_name;
	}
	
	method request_ticket(pid source, pid target) {
		result result;
		buffer ticket;
	}
	
	method get_pid(string username) {
		pid pid;
	}
	
	method get_name(pid pid) {
		string name;
	}
	
	method login_with_context(anydata login_data) {
		result result;
		pid pid;
		buffer ticket;
		RVConnectionData connection_data;
	}
}

protocol Authentication_NX : 10 {
	method validate_and_request_ticket(string username) {
		result result;
		pid pid;
		buffer ticket;
		RVConnectionData connection_data;
		string server_name;
	}
	
	method validate_and_request_ticket_with_custom_data(string username, anydata extra_data) {
		result result;
		pid pid;
		buffer ticket;
		RVConnectionData connection_data;
		string server_name;
		string source_key;
	}
	
	method request_ticket(pid source, pid target) {
		result result;
		buffer ticket;
		string key;
	}
	
	method get_pid(string username) {
		pid pid;
	}
	
	method get_name(pid pid) {
		string name;
	}
	
	method validate_and_request_ticket_with_param(ValidateAndRequestTicketParam param) {
		ValidateAndRequestTicketResult result;
	}
}
